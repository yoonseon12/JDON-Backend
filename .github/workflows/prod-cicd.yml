name: JDON-Backend PROD CI-CD

on:
  workflow_dispatch:
    branches:
      - develop
    inputs:
      tags:
        description: '배포할 서버'
        required: true
        type: choice
        default: 'all'
        options:
          - all
          - api
          - batch
          - crawler

jobs:
  integration:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: gradle Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Grant execute permission for gradlew & Build
        run: |
          cd module-api
          chmod +x gradlew
          ./gradlew clean build --stacktrace test
        shell: bash

  deploy:
    needs: integration
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Dev-EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AWS_PROD_HOST }}
          username: ${{ secrets.AWS_PROD_USERNAME }}
          key: ${{ secrets.AWS_PROD_KEY }}
          script: |
            echo "> Git pull"
            cd /home/ec2-user/app/f1-JDON-Backend
            git pull origin develop
            
            echo "> deploy-shell-script 실행"
            cd /home/ec2-user/app
            TAGS="${{ github.event.inputs.tags }}"
            if [ "$TAGS" = "all" ]; then
              echo "all"
              sh module-api-deploy.sh
              sh module-batch-deploy.sh
              sh module-crawler-deploy.sh
            elif [ "$TAGS" = "api" ]; then
              echo "api"
              sh module-api-deploy.sh
            elif [ "$TAGS" = "batch" ]; then
              echo "batch"
              sh module-batch-deploy.sh
            elif [ "$TAGS" = "crawler" ]; then
              echo "crawler"
              sh module-crawler-deploy.sh
            else
              echo "Invalid option"
              exit 1
            fi

            echo "deploy success"